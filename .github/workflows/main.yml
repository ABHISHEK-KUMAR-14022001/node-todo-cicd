name: Deploy Node App to EKS

on:
  workflow_dispatch:
    inputs:
      REGION:
        description: 'AWS Region'
        default: 'us-east-1'
        required: true
      CLUSTER_NAME:
        description: 'EKS Cluster Name'
        default: 'prod-eks-cluster'
        required: true
      GIT_BRANCH:
        description: 'Git Branch to checkout'
        default: 'idp_infra'
        required: true
      GIT_REPO:
        description: 'Git repository'
        default: 'master'
        required: true

env:
  AWS_REGION: ${{ github.event.inputs.REGION }}
  CLUSTER_NAME: ${{ github.event.inputs.CLUSTER_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.GIT_BRANCH }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install AWS CLI, kubectl, and Helm
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl

          if ! command -v aws &>/dev/null; then
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -q awscliv2.zip
            sudo ./aws/install
          fi

          if ! command -v kubectl &>/dev/null; then
            curl -LO "https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.3/2023-11-14/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
          fi

          if ! command -v helm &>/dev/null; then
            curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          fi

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Install AWS Load Balancer Controller (if missing)
        run: |
          if ! kubectl get deployment -n kube-system aws-load-balancer-controller >/dev/null 2>&1; then
            echo "Installing AWS Load Balancer Controller..."
            VPC_ID=$(aws eks describe-cluster --name $CLUSTER_NAME --region $AWS_REGION --query "cluster.resourcesVpcConfig.vpcId" --output text)
            helm repo add eks https://aws.github.io/eks-charts
            helm repo update
            helm upgrade --install aws-load-balancer-controller eks/aws-load-balancer-controller \
              -n kube-system \
              --set clusterName=$CLUSTER_NAME \
              --set region=$AWS_REGION \
              --set vpcId=$VPC_ID \
              --set serviceAccount.create=false \
              --set serviceAccount.name=aws-load-balancer-controller
          else
            echo "AWS Load Balancer Controller is already installed."
          fi

      - name: Deploy Node Application
        run: |
          echo "Deploying node application"
          kubectl apply -f deployment.yaml

      - name: Check Kubernetes Service
        run: kubectl get services todo-service

      - name: Wait for External IP
        run: |
          echo "Waiting for external IP..."
          for i in {1..60}; do
            EXTERNAL_IP=$(kubectl get svc todo-service -o jsonpath="{.status.loadBalancer.ingress[0].hostname}")
            if [ -n "$EXTERNAL_IP" ]; then
              echo "Service is available at: http://$EXTERNAL_IP"
              break
            else
              echo "Still waiting for External IP... ($i/60)"
              sleep 15
            fi
          done
          if [ -z "$EXTERNAL_IP" ]; then
            echo "Failed to get External IP"
            exit 1
          fi

      - name: Get Kubernetes Pods
        run: kubectl get pods -o wide
